name: 部署

on:
  push:
    branches: ["feature-cd"]

jobs:
  setup-dns:
    name: 用 Terraform 设置 DNS
    runs-on: ubuntu-latest
    environment: ${{ vars.ENVIRONMENT_STAGE }}

    env:
      TF_TOKEN_app_terraform_io: "${{ secrets.TF_API_TOKEN }}"
      TF_CLOUD_ORGANIZATION: "${{ secrets.TF_CLOUD_ORGANIZATION }}"
      TF_WORKSPACE: "${{ github.event.repository.name }}-${{ vars.ENVIRONMENT_STAGE }}"

      TF_VAR_cloudflare_api_token: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
      TF_VAR_cloudflare_account_id: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
      TF_VAR_cloudflare_zone: "${{ secrets.CLOUDFLARE_ZONE }}"
      TF_VAR_ip: "${{ secrets.IP }}"

    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
      - uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        # with:
        #   cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Init
        run: terraform init

      - name: Terraform Plan
        run: terraform plan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

  deploy:
    name: 用 Ansible 部署
    needs: setup-dns
    runs-on: ubuntu-latest
    environment: ${{ vars.ENVIRONMENT_STAGE }}

    defaults:
      run:
        shell: bash
        working-directory: ansible

    steps:
      - uses: actions/checkout@v3
      - name: Run playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: deploy.yml
          directory: ./
          key: ${{secrets.SSH_PRIVATE_KEY}}
          options: |
            --verbose
